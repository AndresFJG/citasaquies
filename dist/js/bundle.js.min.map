{"version":3,"sources":["app.js","buscador.js"],"names":["paso","pasoInicial","pasoFinal","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarSeccion","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","nombreCliente","seleccionarFecha","seleccionarHora","mostrarResumen","seccionAnterior","document","querySelector","classList","remove","pasoSelector","add","tabAnterior","querySelectorAll","forEach","boton","addEventListener","e","preventDefault","parseInt","target","dataset","async","url","resultado","fetch","mostrarServicios","json","error","console","log","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","divServicio","some","agregado","filter","value","dia","Date","getUTCDay","includes","mostrarAlerta","split","mensaje","tipo","elemento","desaparece","alertaPrevia","alerta","setTimeout","resumen","firstChild","removeChild","Object","values","length","headingServicios","contenedorServicio","textoServicio","innerHTML","headingCita","fechaObj","mes","getMonth","getDate","year","getFullYear","fechaFormateada","UTC","toLocaleDateString","weekday","month","day","fechaCita","horaCita","botonReservar","reservarCita","idServicios","map","datos","FormData","append","respuesta","method","body","Swal","fire","icon","title","text","button","then","enviarNotificacionTelegram","window","location","reload","join","params","URLSearchParams","headers","Content-Type","buscarPorFecha","fechaSeleccionada"],"mappings":"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","file":"bundle.js","sourcesContent":["let paso = 1;\nconst pasoInicial = 1;\nconst pasoFinal = 3;\n\n\nconst cita = {\n    // id: '',\n    nombre: '',\n    fecha: '',\n    hora: '',\n    servicios: []\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    mostrarSeccion(); // Muestra y oculta las secciones\n    tabs(); // Cambia la sección cuando se presionen los tabs\n    botonesPaginador(); // Agrega o quita los botones del paginador\n    paginaSiguiente(); \n    paginaAnterior();\n\n    consultarAPI(); // Consulta la API en el backend de PHP\n\n    // idCliente();\n    nombreCliente(); // Añade el nombre del cliente al objeto de cita\n    seleccionarFecha(); // Añade la fecha de la cita en el objeto\n    seleccionarHora(); // Añade la hora de la cita en el objeto\n\n    mostrarResumen(); // Muestra el resumen de la cita\n}\n\nfunction mostrarSeccion() {\n    // Ocultar la sección que tenga la clase de mostrar\n    const seccionAnterior = document.querySelector('.mostrar');\n    if(seccionAnterior) {\n        seccionAnterior.classList.remove('mostrar');\n    }\n\n    // Seleccionar la sección con el paso...\n    const pasoSelector = `#paso-${paso}`;\n    const seccion = document.querySelector(pasoSelector);\n    seccion.classList.add('mostrar');\n\n    // Quita la clase de actual al tab anterior\n    const tabAnterior = document.querySelector('.actual');\n    if(tabAnterior) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    // Resalta el tab actual\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\n    tab.classList.add('actual');\n}\n\nfunction tabs() {\n    // Agrega y cambia la variable de paso según el tab seleccionado\n    const botones = document.querySelectorAll('.tabs button');\n    botones.forEach(boton => {\n        boton.addEventListener('click', function(e) {\n            e.preventDefault();\n\n            paso = parseInt(e.target.dataset.paso);\n            mostrarSeccion();\n\n            botonesPaginador();\n        });\n    });\n}\n\nfunction botonesPaginador() {\n    const paginaAnterior = document.querySelector('#anterior');\n    const paginaSiguiente = document.querySelector('#siguiente');\n\n    if(paso === 1) {\n        paginaAnterior.classList.add('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    } else if (paso === 3) {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.add('ocultar');\n\n        mostrarResumen();\n    } else {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    }\n\n    mostrarSeccion();\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', function() {\n        if(paso <= pasoInicial) return;\n        paso--;\n\n        botonesPaginador();\n    })\n}\n\nfunction paginaSiguiente() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', function() {\n        if(paso >= pasoFinal) return;\n        paso++;\n\n        botonesPaginador();\n    })\n}\n\nasync function consultarAPI() {\n    try {\n        const url = '/api/servicios';\n        const resultado = await fetch(url);\n        const servicios = await resultado.json();\n        mostrarServicios(servicios);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction mostrarServicios(servicios) {\n    servicios.forEach(servicio => {\n        const { id, nombre, precio } = servicio;\n\n        const nombreServicio = document.createElement('P');\n        nombreServicio.classList.add('nombre-servicio');\n        nombreServicio.textContent = nombre;\n\n        const precioServicio = document.createElement('P');\n        precioServicio.classList.add('precio-servicio');\n        precioServicio.textContent = `$${precio}`;\n\n        const servicioDiv = document.createElement('DIV');\n        servicioDiv.classList.add('servicio');\n        servicioDiv.dataset.idServicio = id;\n        servicioDiv.onclick = function() {\n            seleccionarServicio(servicio);\n        }\n\n        servicioDiv.appendChild(nombreServicio);\n        servicioDiv.appendChild(precioServicio);\n\n        document.querySelector('#servicios').appendChild(servicioDiv);\n    });\n}\n\nfunction seleccionarServicio(servicio) {\n    const { id } = servicio;\n    const { servicios } = cita;\n\n    // Identificar el elemento al que se le da click\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`);\n\n    // Comprobar si un servicio ya fue agregado \n    if(servicios.some(agregado => agregado.id === id)) {\n        // Eliminarlo\n        cita.servicios = servicios.filter(agregado => agregado.id !== id);\n        divServicio.classList.remove('seleccionado');\n    } else {\n        // Agregarlo\n        cita.servicios = [...servicios, servicio];\n        divServicio.classList.add('seleccionado');\n    }\n    // console.log(cita);\n}\n\n// function idCliente() {\n//     cita.id = document.querySelector('#id').value;\n// }\n\nfunction nombreCliente() {\n    const inputNombre = document.querySelector('#nombre');\n    inputNombre.addEventListener('input', function(e) {\n        cita.nombre = e.target.value;\n    });\n}\n\nfunction seleccionarFecha() {\n    const inputFecha = document.querySelector('#fecha');\n    inputFecha.addEventListener('input', function(e) {\n        const dia = new Date(e.target.value).getUTCDay();\n\n        if([6, 0].includes(dia)) {\n            e.target.value = '';\n            mostrarAlerta('Fines de semana no permitidos', 'error', '.formulario');\n        } else {\n            cita.fecha = e.target.value;\n        }\n    });\n}\n\nfunction seleccionarHora() {\n    const inputHora = document.querySelector('#hora');\n    inputHora.addEventListener('input', function(e) {\n        const horaCita = e.target.value;\n        const hora = horaCita.split(\":\")[0];\n        if(hora < 10 || hora > 18) {\n            e.target.value = '';\n            mostrarAlerta('Hora No Válida', 'error', '.formulario');\n        } else {\n            cita.hora = e.target.value;\n            // console.log(cita);\n        }\n    })\n}\n\nfunction mostrarAlerta(mensaje, tipo, elemento, desaparece = true) {\n    // Previene que se generen más de 1 alerta\n    const alertaPrevia = document.querySelector('.alerta');\n    if(alertaPrevia) {\n        alertaPrevia.remove();\n    }\n\n    // Scripting para crear la alerta\n    const alerta = document.createElement('DIV');\n    alerta.textContent = mensaje;\n    alerta.classList.add('alerta');\n    alerta.classList.add(tipo);\n\n    const referencia = document.querySelector(elemento);\n    referencia.appendChild(alerta);\n\n    if(desaparece) {\n        // Eliminar la alerta\n        setTimeout(() => {\n            alerta.remove();\n        }, 3000);\n    }\n}\n\nfunction mostrarResumen() {\n    const resumen = document.querySelector('.contenido-resumen');\n    // Limpiar el Contenido de Resumen\n    while(resumen.firstChild) {\n        resumen.removeChild(resumen.firstChild);\n    }   \n    \n    if(Object.values(cita).includes('') || cita.servicios.length === 0 ){\n      mostrarAlerta('Faltan Datos de Servicios, Nombre, Fecha u Hora', 'error', '.contenido-resumen', false);\n      return\n    } else{\n        console.log('Todo esta bien')\n    }\n    // Formatear el div de resumen\n    const {nombre, fecha, hora, servicios } = cita;\n\n    // Heading para Servicios en Resumen\n    const headingServicios = document.createElement('H3');\n    headingServicios.textContent = 'Resumen de Servicios';\n    resumen.appendChild(headingServicios);\n\n    // Iterando y mostrando los servicios\n    servicios.forEach(servicio => {\n        const { id, precio, nombre } = servicio;\n        const contenedorServicio = document.createElement('DIV');\n        contenedorServicio.classList.add('contenedor-servicio');\n\n        const textoServicio = document.createElement('P');\n        textoServicio.textContent = nombre;\n\n        const precioServicio = document.createElement('P');\n        precioServicio.innerHTML = `<span>Precio:</span> $${precio}`;\n\n        contenedorServicio.appendChild(textoServicio);\n        contenedorServicio.appendChild(precioServicio);\n\n        resumen.appendChild(contenedorServicio);\n    });\n\n    // Heading para Cita en Resumen\n    const headingCita = document.createElement('H3');\n    headingCita.textContent = 'Resumen de Cita';\n    resumen.appendChild(headingCita);\n\n    const nombreCliente = document.createElement('P');\n    nombreCliente.innerHTML = `<span>Nombre:</span> ${nombre}`;\n\n    // Formatear la fecha en español\n    const fechaObj = new Date(fecha);\n    const mes = fechaObj.getMonth();\n    const dia = fechaObj.getDate() + 2;\n    const year = fechaObj.getFullYear();\n\n    const fechaUTC = new Date(Date.UTC(year, mes, dia));\n\n    const opciones = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const fechaFormateada = fechaUTC.toLocaleDateString('es-MX', opciones);\n\n    const fechaCita = document.createElement('P');\n    fechaCita.innerHTML = `<span>Fecha:</span> ${fechaFormateada}`;\n\n    const horaCita = document.createElement('P');\n    horaCita.innerHTML = `<span>Hora:</span> ${hora} Horas`;\n\n    // Boton para Crear una cita\n    const botonReservar = document.createElement('BUTTON');\n    botonReservar.classList.add('boton');\n    botonReservar.textContent = 'Reservar Cita';\n    botonReservar.onclick = reservarCita;\n\n    resumen.appendChild(nombreCliente);\n    resumen.appendChild(fechaCita);\n    resumen.appendChild(horaCita);\n    resumen.appendChild(botonReservar);\n}\n\nasync function reservarCita() {\n    const { nombre, fecha, hora, servicios, id } = cita;\n    const idServicios = servicios.map(servicio => servicio.id);\n\n    const datos = new FormData();\n    datos.append('fecha', fecha);\n    datos.append('hora', hora);\n    datos.append('nombre', nombre);\n    datos.append('servicios', idServicios);\n\n    try {\n        const url = '/api/citas';\n        const respuesta = await fetch(url, {\n            method: 'POST',\n            body: datos\n        });\n\n        const resultado = await respuesta.json();\n        console.log(resultado);\n\n        if (resultado.resultado) {\n            Swal.fire({\n                icon: 'success',\n                title: 'Cita Creada',\n                text: 'Tu cita fue creada correctamente',\n                button: 'OK'\n            }).then(() => {\n                enviarNotificacionTelegram(cita);\n                setTimeout(() => {\n                    window.location.reload();\n                }, 3000);\n            })\n        }\n    } catch (error) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'Hubo un error al guardar la cita'\n        })\n    }\n}\n\nasync function enviarNotificacionTelegram(cita) {\n    const token = '7317505488:AAHElNGBZ5axL25nRDE2SaJHouxZMUOt8uQ';\n    const chatId = '5432615977';\n    const { nombre, fecha, hora, servicios } = cita;\n\n    const serviciosList = servicios.map(servicio => servicio.nombre).join(', ');\n    const mensaje = `Nueva cita creada:\\n\\nNombre: ${nombre}\\nFecha: ${fecha}\\nHora: ${hora}\\nServicios: ${serviciosList}`;\n\n    const url = `https://api.telegram.org/bot${token}/sendMessage`;\n    const params = new URLSearchParams();\n    params.append('chat_id', chatId);\n    params.append('text', mensaje);\n\n    try {\n        const respuesta = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: params\n        });\n\n        const resultado = await respuesta.json();\n        console.log('Notificación enviada a Telegram:', resultado);\n    } catch (error) {\n        console.error('Error al enviar la notificación a Telegram:', error);\n    }\n}","document.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    buscarPorFecha();\n}\n\nfunction buscarPorFecha() {\n    const fechaInput = document.querySelector('#fecha');\n    fechaInput.addEventListener('input', function(e) {\n        const fechaSeleccionada = e.target.value;\n\n        window.location = `?fecha=${fechaSeleccionada}`;\n    });\n}"]}